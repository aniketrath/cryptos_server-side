services:
  mongo:
    image: mongo:latest
    container_name: database-mongo
    networks:
      - internal-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_APP_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_APP_PASSWD}
      - MONGO_INITDB_DATABASE=${MONGO_APP_DB}
    volumes:
      - mongo-data:/data/db

  express:
    build: .
    container_name: express-backend
    networks:
      - internal-network
      - monitoring-network
    ports:
      - "6000:6000"
    depends_on:
      - mongo
      - loki  # Ensure Loki is available before Express starts
    environment:
      - FORCE_COLOR=1
      - MONGO_APP_URI=${MONGO_APP_URI}
      - PORT=${PORT}
      - FOREIGN_API=${FOREIGN_API}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    expose:
      - "6000"
    volumes:
      - logs:/var/log/server/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6000/"]
      interval: 15s
      timeout: 10s
      retries: 10

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "6002:9090"
    networks:
      - monitoring-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_APP_PASSED}
    ports:
      - "6001:3000"
    networks:
      - monitoring-network
    volumes:
      - tools:/var/lib/grafana
    user: root
    depends_on:
      - loki  # Ensure Loki is available for Grafana to read logs

  loki:
    image: grafana/loki  # Build the custom Loki image
    container_name: loki
    ports:
      - "6003:3100"
    volumes:
      - tools:/loki
      - ./configs/loki-config.yml:/etc/loki/config.yml
    command: -config.file=/etc/loki/config.yml
    networks:
      - monitoring-network
    expose:
      - 3100

  promtail:
    image: grafana/promtail:2.7.1
    container_name: promtail
    environment:
      - LOKI_URL=http://loki:3100/api/v1/push
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - tools:/var/tmp/ 
      - logs:/var/log/server/
      - logs:/var/log/scheduler/
      - ./configs/promtail-config.yml:/etc/promtail/config.yml
    networks:
      - monitoring-network

  scheduler:
    build: ./scheduler
    container_name: scheduler
    networks:
      - monitoring-network
    volumes:
      - logs:/var/log/scheduler/
    depends_on:
      express:
        condition: service_healthy
    environment:
      - FORCE_COLOR=1
      - SERVER_URL=http://express-backend:6000
      - USERNAME=${EXPRESS_ACCESS_USENAME}
      - PASSWD=${EXPRESS_ACCESS_PASSWD}

networks:
  internal-network:
    driver: bridge
  monitoring-network:
    driver: bridge

volumes:
  mongo-data:
    external: true
  logs:
    external: true
  tools:
    external: true